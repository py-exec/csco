services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: csco_django
    container_name: csco_django
    volumes:
      - ../backend:/app  # نگه‌داشتن بکند در `/app`
      - ../frontend:/frontend  # ✅ نگه‌داشتن فرانت‌اند خارج از `/app`
      - ../frontend/static:/frontend/static  # ✅ مسیر استاتیک (جمع‌آوری شده)
      - ../frontend/staticfiles:/frontend/staticfiles  # ✅ مسیر نهایی staticfiles
      - ../frontend/media:/frontend/media  # ✅ مسیر مدیا
    working_dir: /app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn csco.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 120"
    env_file:
      - ../env/.env

  db:
    image: postgres:15
    container_name: csco_postgres
    restart: always
    env_file:
      - ../env/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "py_exec", "-d", "csco_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: csco_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: csco_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
  redis_data: